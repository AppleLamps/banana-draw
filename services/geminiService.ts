
import { GoogleGenAI, Modality } from "@google/genai";

// Ensure the API key is available from environment variables
const API_KEY = process.env.API_KEY;
if (!API_KEY) {
  throw new Error("API_KEY environment variable not set. Please set it in your environment.");
}

const ai = new GoogleGenAI({ apiKey: API_KEY });

/**
 * Generates a sketch from a given image using the Gemini API.
 * @param base64ImageData The base64-encoded image data (without the data URL prefix).
 * @param mimeType The MIME type of the image (e.g., 'image/jpeg').
 * @returns A promise that resolves to the base64 data URL of the generated sketch.
 */
export const generateSketch = async (base64ImageData: string, mimeType: string): Promise<string> => {
  try {
    const response = await ai.models.generateContent({
      model: 'gemini-2.5-flash-image',
      contents: {
        parts: [
          {
            inlineData: {
              data: base64ImageData,
              mimeType: mimeType,
            },
          },
          {
            text: 'Transform this photo into an elegant, hand-drawn pencil sketch. Focus on clean lines, subtle shading, and artistic expression, while preserving the key features of the original image. The background should be a clean white.',
          },
        ],
      },
      config: {
        responseModalities: [Modality.IMAGE],
      },
    });

    for (const part of response.candidates[0].content.parts) {
      if (part.inlineData) {
        const base64ImageBytes: string = part.inlineData.data;
        const responseMimeType = part.inlineData.mimeType;
        // The API returns PNGs for this kind of generation
        return `data:${responseMimeType};base64,${base64ImageBytes}`;
      }
    }
    
    // If no image part is found in the response
    throw new Error("No image was generated by the API.");

  } catch (error) {
    console.error("Error calling Gemini API:", error);
    // Re-throw a more user-friendly error
    throw new Error("The AI model could not process the image. Please try a different one.");
  }
};
